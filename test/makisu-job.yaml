---
apiVersion: registry.mgoltzsche.github.com/v1alpha1
kind: ImageBuildEnv
metadata:
  name: example
spec:
  redis: true
  secrets:
  - secretName: imagepushsecret-example

---
apiVersion: batch/v1
kind: Job
metadata:
  name: makisu-job
spec:
  template:
    spec:
      restartPolicy: Never
      initContainers:
      # here a git repo could be cloned
      - name: provisioner
        image: alpine:3.12
        command: ["/bin/sh", "-c"]
        args:
        - |
            set -ex;
            echo $'#!/bin/sh\ntimeout 1 cat - >/dev/null; echo -e "HTTP/1.1 200 OK\n\nhello world!"' > /makisu-context/handler;
            chmod +x /makisu-context/handler;
            echo 'FROM alpine:3.12' > /makisu-context/Dockerfile;
            echo 'COPY handler /handler' >> /makisu-context/Dockerfile;
            echo 'ENTRYPOINT ["/usr/bin/nc", "-lk", "-p", "8080", "-e", "/handler"]' >> /makisu-context/Dockerfile;
        volumeMounts:
        - name: context
          mountPath: /makisu-context
      containers:
      - name: makisu
        image: mgoltzsche/image-registry-operator:makisu
        imagePullPolicy: Always
        args:
        - build
        - --log-fmt=console
        - --redis-cache-addr=$REDIS
        - --redis-cache-password=$REDIS_PASSWORD
        - --registry-config=/makisu-internal/config/makisu.yaml
        - --push=$REGISTRY
        - --modifyfs=true
        - -t=example:latest
        - /makisu-context
        volumeMounts:
        - name: context
          mountPath: /makisu-context
        - name: storage
          mountPath: /makisu-storage
        - name: registry-config
          mountPath: /makisu-internal/config
      volumes:
      - name: context
        emptyDir: {}
      - name: storage
        emptyDir: {}
      - name: registry-config
        secret:
          secretName: imagebuildenv-example-conf

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example
imagePullSecrets:
- name: imagepullsecret-example

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      name: myapp
  template:
    metadata:
      labels:
        name: myapp
    spec:
      serviceAccount: example
      containers:
        - name: example
          image: registry.default.svc.cluster.local/example:latest
          imagePullPolicy: Always